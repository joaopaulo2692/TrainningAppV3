@page "/clientes"
@inject NavigationManager NavigationManager
@using TrainningApp.Core.DTO.User

<div style="display: flex; justify-content: center;">
    <MudButton  Variant="Variant.Filled" Color="Color.Success">Novo Usuário</MudButton>
</div>
<br />
<br />
<br />


<div style="display: flex; justify-content: center; padding: 10px;">
    <MudPaper Width="75%" Style="padding: 20px; display: flex; flex-direction: column; position: relative; overflow-y: auto; box-sizing: border-box;">
        @foreach (var user in users)
        {
            <!-- Container com hover -->
            <MudGrid AlignItems="AlignItems.Center" Class="profile-container hover-container">
                <!-- Avatar -->
                <MudItem>
                    <MudAvatar Size="Size.Large" Image="https://via.placeholder.com/150" Class="mb-2" />
                </MudItem>

                <!-- Texto ao lado do avatar -->
                <MudItem Class="profile-text">
                    <MudText Typo="Typo.h6" Class="font-weight-bold">@user.Name</MudText>
                        <MudText Typo="Typo.body2" Class="text-muted">@user.Age anos, @user.Gender</MudText>
                    </MudItem>

                    <!-- Ícones de ação próximos aos dados -->
                    <MudItem>
                        <div class="action-icons">
                            <MudIconButton OnClick="NavigateToEditPage" Icon="@Icons.Material.Outlined.Edit" />
                        </div>
                    </MudItem>
                </MudGrid>
            <MudDivider Class="my-4" />
        }
    </MudPaper>
</div>

<style>
    /* Oculta os ícones inicialmente */
    .hover-container .action-icons {
        visibility: hidden;
        opacity: 0;
        transition: opacity 0.3s ease, visibility 0.3s ease;
    }

    /* Mostra os ícones no hover */
    .hover-container:hover .action-icons {
        visibility: visible;
        opacity: 1;
    }

    /* Adiciona efeito de hover ao container */
    .hover-container {
        transition: background-color 0.3s ease;
    }

        .hover-container:hover {
            background-color: #2a2a3d; /* Ajuste a cor conforme necessário */
            cursor: pointer;
        }
</style>


@code {
    List<UserVO> users = new List<UserVO>();

    private void NavigateToEditPage()
    {
        NavigationManager.NavigateTo("/cliente"); // Substitua "/edit-page" pela rota desejada
    }
    protected override void OnInitialized()
    {
        users = new List<UserVO>()
{
    new UserVO()
    {
        Name = "João",
        Age = 32,
        Gender = "Masculino"
    },
    new UserVO()
    {
        Name = "Letícia",
        Age = 27,
        Gender = "Feminino"
    },
    new UserVO()
    {
        Name = "Carlos",
        Age = 45,
        Gender = "Masculino"
    },
    new UserVO()
    {
        Name = "Mariana",
        Age = 22,
        Gender = "Feminino"
    },
    new UserVO()
    {
        Name = "Pedro",
        Age = 38,
        Gender = "Masculino"
    },
    new UserVO()
    {
        Name = "Sofia",
        Age = 29,
        Gender = "Feminino"
    },
    new UserVO()
    {
        Name = "Gabriel",
        Age = 34,
        Gender = "Masculino"
    },
    new UserVO()
    {
        Name = "Ana",
        Age = 24,
        Gender = "Feminino"
    },
    new UserVO()
    {
        Name = "Lucas",
        Age = 31,
        Gender = "Masculino"
    },
    new UserVO()
    {
        Name = "Camila",
        Age = 28,
        Gender = "Feminino"
    },
    new UserVO()
    {
        Name = "Ricardo",
        Age = 41,
        Gender = "Masculino"
    },
    new UserVO()
    {
        Name = "Beatriz",
        Age = 26,
        Gender = "Feminino"
    },
    new UserVO()
    {
        Name = "Mateus",
        Age = 35,
        Gender = "Masculino"
    },
    new UserVO()
    {
        Name = "Larissa",
        Age = 30,
        Gender = "Feminino"
    },
    new UserVO()
    {
        Name = "Felipe",
        Age = 39,
        Gender = "Masculino"
    },
    new UserVO()
    {
        Name = "Isabela",
        Age = 25,
        Gender = "Feminino"
    },
    new UserVO()
    {
        Name = "Thiago",
        Age = 37,
        Gender = "Masculino"
    },
    new UserVO()
    {
        Name = "Patrícia",
        Age = 33,
        Gender = "Feminino"
    },
    new UserVO()
    {
        Name = "André",
        Age = 40,
        Gender = "Masculino"
    },
    new UserVO()
    {
        Name = "Juliana",
        Age = 36,
        Gender = "Feminino"
    }
};
        users = users.OrderBy(x => x.Name).ToList();
    }
}
