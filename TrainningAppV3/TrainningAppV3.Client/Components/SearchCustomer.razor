@using TrainningApp.Core.DTO.User
@inject NavigationManager Navigation

<MudAutocomplete T="string"
                 Label="Buscar aluno"
                 Value="@customerSelected"
                 ValueChanged="OnCustomerSelected"
                 SearchFunc="@SearchuCustomer"
                 ResetValueOnEmptyText="@resetValueOnEmptyText"
                 CoerceText="@coerceText"
                 CoerceValue="@coerceValue"
                 Class="custom-autocomplete" 
                 />

<style>
    .custom-autocomplete {
        margin-top: -10px; /* Ajuste este valor para mover o componente para cima */
    }

        .custom-autocomplete .mud-input-root,
        .mud-autocomplete .mud-input-label,
        .custom-autocomplete .mud-input-control,
        .custom-autocomplete .mud-input-underline {
            background-color: #2a2a3d !important; /* Cor de fundo roxa */
            color: white !important; /* Cor do texto */
            border-color: antiquewhite !important; /* Cor da borda */
        }
</style>

@code {

    private string customerSelected { get; set; }
    private bool resetValueOnEmptyText;
    private bool coerceText;
    private bool coerceValue;

    private async Task OnCustomerSelected(string customer)
    {
        Navigation.NavigateTo("/cliente");
    }

    private async Task<IEnumerable<string>> SearchuCustomer(string value, CancellationToken token)
    {

        if (string.IsNullOrEmpty(value))
        {
            return users.Select(x => x.Name);
        }
        UserVO userSelected = users.Where(x => x.Name == value).FirstOrDefault();
        customerSelected = userSelected.Name;
      
        return users.Select(x => x.Name).Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
        StateHasChanged();

        // return exerciseList.Select(x => x.Name).Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
  
    }

    List<UserVO> users = new List<UserVO>()
    {
        new UserVO()
        {
            Name = "João",
            Id = 1
        },
                new UserVO()
        {
            Name = "Leticia",
            Id = 1
        },
                new UserVO()
        {
            Name = "Juninho",
            Id = 1
        },
                new UserVO()
        {
            Name = "Helena",
            Id = 1
        },
    };
}
