@using TrainningApp.Core
@using TrainningApp.Core.DTO.Trainning
@using TrainningApp.Core.DTO.TrainningDay
@using TrainningApp.Core.DTO.TrainningExercise
@using TrainningAppV3.Client.Pages

@if(AddTrainning == false && EditTrainning == false)
{
    <div style="display: flex; justify-content: center;">
        <MudButton OnClick="() => OndAddTrainning()" Variant="Variant.Filled" Color="Color.Success">Novo Treino</MudButton>
    </div>
    <br />
    <br />
    <br />
    @foreach (TrainningReturnVO trainning in trainningsList)
    {
        <div style="display: flex; justify-content: center; margin-bottom: 10px;">
            <MudPaper Height="200px" Width="70%" Style="padding: 20px; display: flex; flex-direction: column; position: relative;">
                <MudText Typo="Typo.h4" Style="margin-bottom: 15px;">@trainning.Name</MudText>
                    <MudDivider Style="height: 6px; margin-bottom: 15px;" />

                    <MudText Style="margin-bottom: 10px;">
                        <span class="bold-label">Responsável:</span>
                        <span class="normal-text">@trainning.Name</span>
                </MudText>

                <MudText Style="margin-bottom: 10px;">
                    <span class="bold-label">Objetivo:</span>
                    <span class="normal-text">@trainning.Goal</span>
                </MudText>

                <MudText>
                    <span class="bold-label">Criado em:</span>
                    <span class="normal-text">@trainning.CreatedAt</span>
                </MudText>

                <!-- Botões alinhados à direita e mais para cima -->
                <div style="position: absolute; right: 20px; top: 10px; display: flex; flex-direction: column; align-items: flex-end;">
                    <MudFab OnClick="()=> OnEditTrainning(trainning)" Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Edit" Style="margin-bottom: 10px;" />
                    <MudIconButton OnClick="()=> OnDeleteTrainning(trainning)" Icon="@Icons.Material.Filled.Delete" aria-label="delete" />
                </div>
            </MudPaper>
        </div>

    }
}
@if (AddTrainning == true || EditTrainning == true)
{
    <Trainning TrainningToEdit="TrainningEditing"></Trainning>
}

<style>
    .bold-label {
        font-weight: bold;
    }

    .normal-text {
        font-weight: normal;
    }

</style>

@code {
    // TrainningReturnVO trainning = new TrainningReturnVO();
    private TrainningReturnVO TrainningEditing { get; set; }
    List<TrainningReturnVO> trainningsList = new List<TrainningReturnVO>();

    private bool AddTrainning { get; set; } = false;
    private bool EditTrainning { get; set; } = false;
    protected override void OnInitialized()
    {
        // trainning = new TrainningReturnVO()
        //     {
        //         CreatedAt = DateTime.Now,
        //         Goal = "Hipertrofia",
        //         Name = "Treino 2024",
        //         PersonalName = "João Paulo Rezende"
        // };

        trainningsList = new List<TrainningReturnVO>{
            new TrainningReturnVO()
            {
                Id = 1,
                CreatedAt = DateTime.Now,
                Goal = "Hipertrofia",
                Name = "Treino 2024",
                PersonalName = "João Paulo Rezende",
                TrainningDays = new List<TrainningDayReturnVO>()
                {
                    new TrainningDayReturnVO
                    {
                        Name = "A",
                        Ordenation = 1,
                        TrainningId = 1,
                        TrainningExercises = new List<TrainningExerciseVO>
                        {
                            new TrainningExerciseVO
                             {
                                Reps = "10",
                                Set = 3,
                                ExerciseName = "Supino reto",
                                Info = "Normal",
                                Ordenation = 1,
                                TrainningDayId = 1
                            },
                                                        new TrainningExerciseVO
                             {
                                Reps = "10",
                                Set = 3,
                                ExerciseName = "Supino inclinado",
                                Info = "Normal",
                                Ordenation = 2,
                                TrainningDayId = 1
                            },
                                                        new TrainningExerciseVO
                             {
                                Reps = "10",
                                Set = 3,
                                ExerciseName = "Supino declinado",
                                Info = "Normal",
                                Ordenation = 3,
                                TrainningDayId = 1
                            },
                        }
                    },
                    new TrainningDayReturnVO
                    {
                        Name = "B",
                        Ordenation = 2,
                        TrainningId = 2,
                        TrainningExercises = new List<TrainningExerciseVO>
                        {
                            new TrainningExerciseVO
                             {
                                Reps = "10",
                                Set = 3,
                                ExerciseName = "Leg",
                                Info = "Normal",
                                Ordenation = 1,
                                TrainningDayId = 1
                            },
                                                        new TrainningExerciseVO
                             {
                                Reps = "10",
                                Set = 3,
                                ExerciseName = "Cadeira",
                                Info = "Normal",
                                Ordenation = 2,
                                TrainningDayId = 1
                            },
                                                        new TrainningExerciseVO
                             {
                                Reps = "10",
                                Set = 3,
                                ExerciseName = "Panturrilha",
                                Info = "Normal",
                                Ordenation = 3,
                                TrainningDayId = 1
                            },
                        }
                    },
                    new TrainningDayReturnVO
                    {
                        Name = "C",
                        Ordenation = 3,
                        TrainningId = 3,
                        TrainningExercises = new List<TrainningExerciseVO>
                        {
                            new TrainningExerciseVO
                             {
                                Reps = "10",
                                Set = 3,
                                ExerciseName = "Pulley",
                                Info = "Normal",
                                Ordenation = 1,
                                TrainningDayId = 1
                            },
                                                        new TrainningExerciseVO
                             {
                                Reps = "10",
                                Set = 3,
                                ExerciseName = "Peck Deck",
                                Info = "Normal",
                                Ordenation = 2,
                                TrainningDayId = 1
                            },
                                                        new TrainningExerciseVO
                             {
                                Reps = "10",
                                Set = 3,
                                ExerciseName = "Rosca direta",
                                Info = "Normal",
                                Ordenation = 3,
                                TrainningDayId = 1
                            },
                        }
                    }

                }
            },
             new TrainningReturnVO()
            {
                 Id = 2,
                CreatedAt = DateTime.Now,
                Goal = "Emagrecimento",
                Name = "Treino 2024",
                PersonalName = "Zé"
            },
             new TrainningReturnVO()
            {
                 Id = 3,
                CreatedAt = DateTime.Now,
                Goal = "Condicionamento",
                Name = "Treino 2024",
                PersonalName = "Léo"
            },

        };
    }

    private void OnDeleteTrainning(TrainningReturnVO trainningToDelete)
    {
        TrainningReturnVO toDelete = trainningsList.Where(x => x == trainningToDelete).FirstOrDefault();
        if (toDelete != null) trainningsList.Remove(toDelete);

    }

    private void OndAddTrainning()
    {
        AddTrainning = true;
    }

    private void OnEditTrainning(TrainningReturnVO trainningToEdit)
    {
        TrainningEditing = trainningToEdit;
        EditTrainning = true;
    }
}
